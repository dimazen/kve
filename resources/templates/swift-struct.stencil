// Do not modify. File generated automatically.

import Foundation

public struct {{ name }} {
{% for entry in encoded_key_values %}
  public static var {{ entry.key }}: String {
    let encodingKey = Data(bytes: key)
    let data = Data(bytes: [{{ entry.value.value|join:", " }}]).encoded(by: encodingKey)

    return String(data: data, encoding: .ascii)!
  }
{% endfor %}

  private static var key: [UInt8] {
    return [{{ encoding_key|join:", " }}]
  }
}

private extension Data {
    func encoded(by key: Data) -> Data {
        var copy = self

        var keyIndex = 0
        for index in 0..<count {
            copy[index] ^= key[keyIndex]

            keyIndex += 1

            if keyIndex == key.count {
                keyIndex = 0
            }
        }

        return copy
    }
}
